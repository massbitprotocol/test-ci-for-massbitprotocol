syntax = "proto3";

package chaindata;

// Interface exported by the server.
service Streamout {
  // A simple RPC.
  rpc SayHello(HelloRequest) returns (HelloReply);

  // A server-to-client streaming RPC.
  rpc ListBlocks(GetBlocksRequest) returns (stream GenericDataProto);
}

message GenericDataProto {
  ChainType chain_type = 1;
  string version = 2;
  DataType data_type = 3;
  string block_hash = 4;
  uint64 block_number = 5;
  bytes payload = 6;
}


message HelloRequest {
  // Request message contains the name to be greeted
  string name = 1;
}

message GetBlocksRequest {
  // Request message contains the name to be greeted
  uint64 start_block_number = 1;
  uint64 end_block_number = 2;
  ChainType chain_type = 3;
}

message HelloReply {
  // Reply contains the greeting message
  string message = 1;
}

enum ChainType {
  Substrate = 0;
  Ethereum = 1;
  Solana = 2;
}
enum DataType {
  Block = 0;
  Event = 1;
  Transaction = 2; // Alias name of Extrinsic in Substrate
}