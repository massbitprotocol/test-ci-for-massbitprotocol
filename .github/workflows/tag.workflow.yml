name: Workflow for Tag

on:
  create:
    tags:
      - v*

jobs:
  #################
  # Running build #
  ################# 
  build-cargo:
    name: Build Chain Reader & Indexer
    env:
      CHAIN_READER: chain-reader
      INDEXER: indexer-manager-main
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: Swatinem/rust-cache@v1
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true
      - name: Install missing dependencies
        run: |
          sudo apt update
          sudo apt install -y cmake pkg-config libssl-dev git gcc build-essential clang libclang-dev libpq-dev libudev-dev zlib1g-dev llvm make
          rustup toolchain install nightly-2021-05-20
          rustup target add wasm32-unknown-unknown --toolchain nightly-2021-05-20
      - name: Build release
        run: cargo build --release
      - name: List release files
        run: ls -ll target/release
      - name: Upload chain-reader artifact # We will use it in the next docker step 
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.CHAIN_READER }}
          path: target/release/${{ env.CHAIN_READER }}
      - name: Upload indexer artifact # We will use it in the next docker step 
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.INDEXER }}
          path: target/release/${{ env.INDEXER }}

  ##################
  # Running docker #
  ################## 
  docker-cargo:
    needs: [build-cargo] 
    name: Docker Chain Reader & Indexer
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Extract source (branch, name, tag)
        id: source_info
        run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v2
      - name: List files
        run: ls -ll
      - name: Build and push chain-reader docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ./deployment/chain-reader
          push: true
          tags: ${{ steps.source_info.outputs.SOURCE_TAG }}
          labels: chain-reader
      - name: Build and push indexer docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ./deployment/indexer
          push: true
          tags: ${{ steps.branch_info.outputs.SOURCE_TAG }}
          labels: indexer

  docker-python:
    name: Docker code compiler
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: sprise/code-compiler
      - name: Extract source (branch, name, tag)
        id: source_info
        run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
      - name: List files
        run: ls -ll
      - name: Get our docker file to the main source so we have the massbitprotcol app context
        run: cp deployment/code-compiler/Dockerfile Dockerfile
      - name: Build and push image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.source_info.outputs.SOURCE_TAG }}
          labels: code-compiler

  docker-dashboard:
    name: Docker dashboard
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: sprise/dashboard
      - name: Extract source (branch, name, tag)
        id: source_info
        run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
      - name: List files
        run: ls -ll
      - name: Get our docker file to the main source so we have the massbitprotcol app context
        run: cp deployment/dashboard/Dockerfile Dockerfile
      - name: Build and push image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.source_info.outputs.SOURCE_TAG }}
          labels: dashboard
