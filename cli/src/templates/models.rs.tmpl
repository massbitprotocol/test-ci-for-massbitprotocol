use crate::STORE;
use structmap::{FromMap, ToMap};
use structmap_derive::{FromMap, ToMap};

#[derive(FromMap)]
{%- for name, value in entities %}
#[derive(Default, Clone, ToMap)]
{{ value[1] }}

impl Into<structmap::GenericMap> for {{ name }} {
    fn into(self) -> structmap::GenericMap {
        {{ name }}::to_genericmap(self.clone())
    }
}

impl {{ name }} {
    pub fn save(&self) {
        unsafe {
            STORE
                .as_mut()
                .unwrap()
                .save("{{ value[0] }}".to_string(), self.clone().into());
        }
    }
}

{%- endfor -%}