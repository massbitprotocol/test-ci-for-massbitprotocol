version: '3'
services:
  ipfs:
    image: ipfs/go-ipfs:v0.4.23
    ports:
      - '5001:5001'

  postgres:
    build: deployment/store
    ports:
      - '5432:5432'
    command: ["postgres", "-cshared_preload_libraries=pg_stat_statements"]
    environment:
      POSTGRES_USER: graph-node
      POSTGRES_PASSWORD: let-me-in
      POSTGRES_DB: graph-node
    volumes:
      - ./data/postgres-massbit:/var/lib/postgresql/data

  metabase:
    build: deployment/metabase
    restart: always
    entrypoint: [ "./init.sh" ]
    ports:
      - 3002:3000
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: graph-node
      MB_DB_PORT: 5432
      MB_DB_USER: graph-node
      MB_DB_PASS: let-me-in
      MB_DB_HOST: postgres
    depends_on:
      - postgres

  hasura:
    image: hasura/graphql-engine:v2.0.1
    ports:
      - "8080:8080"
    depends_on:
      - "postgres"
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgresql://graph-node:let-me-in@postgres:5432/graph-node
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log

  hasura-console:
    image: sprise/hasura-console:0.1
    ports:
      - "3000:3000"
      - "3001:3001"
    depends_on:
      - "postgres"
    restart: always
    environment:
      NODE_ENV: development
      PORT: 3000
      CDN_ASSETS: "true"
      ASSETS_PATH: https://graphql-engine-cdn.hasura.io/console/assets
      ASSETS_VERSION: channel/stable/v1.0
      ENABLE_TELEMETRY: "true"
      URL_PREFIX: /
      DATA_API_URL: http://localhost:8080
#      DATA_API_URL: http://161.97.86.197:8080
      SERVER_VERSION: v1.0.0
      CONSOLE_MODE: server
      ADMIN_SECRET: massbit

  code-compiler:
    image: sprise/code-compiler:latest
    ports:
      - "5000:5000"
    environment:
      # Pointing to our IPFS container
      IPFS_URL: /dns/ipfs/tcp/5001/http
      # Pointing to our Index Manager container
      INDEX_MANAGER_URL: http://indexer:3030

  chain-reader:
    image: sprise/chain-reader:latest
    ports:
      - "50051:50051"
    restart: always
    environment:
      # Log config
      RUST_LOG_TYPE: file
      RUST_LOG: debug
    volumes:
      # Mount the log to host, so we can monitor the process
      - ./log:/log

  indexer:
    image: sprise/indexer:latest
    ports:
      - "3030:3030"
    depends_on:
      - "chain-reader"
    restart: always
    environment:
      # Pointing to our chain-reader container
      CHAIN_READER_URL: http://chain-reader:50051
      # Pointing to our hasura container
      HASURA_URL: http://hasura:8080/v1/query
      # Pointing to our postgres container (the last param is the postgres container name)
      DATABASE_CONNECTION_STRING: postgres://graph-node:let-me-in@postgres
      # Pointing to our IPFS container
      IPFS_ADDRESS: ipfs:5001
      # Log config
      RUST_LOG_TYPE: file
      RUST_LOG: debug
    volumes:
      # Mount the log to host, so we can monitor the process
      - ./log:/log

  dashboard:
    image: sprise/dashboard:1.3
    ports:
      - "8088:8088"
#    environment:
#      VUE_APP_INDEX_MANAGER_URL: http://161.97.86.197:3030
#      VUE_APP_HASURA_URL: http://161.97.86.197:3000
#      VUE_APP_CODE_COMPILER_URL: http://161.97.86.197:5000
    depends_on: # Dashboard App will call to indexer to get indexer detail & code-compiler to compile and deploy new index
      - "hasura-console"
      - "indexer"
      - "code-compiler"
