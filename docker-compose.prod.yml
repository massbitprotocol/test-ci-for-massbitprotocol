version: '3'
services:
  ipfs:
    image: ipfs/go-ipfs:v0.4.23
    ports:
      - '5001:5001'

  postgres:
    image: postgres
    ports:
      - '5432:5432'
    command: ["postgres", "-cshared_preload_libraries=pg_stat_statements"]
    environment:
      POSTGRES_USER: graph-node
      POSTGRES_PASSWORD: let-me-in
      POSTGRES_DB: graph-node

  hasura:
    image: hasura/graphql-engine:v2.0.1
    ports:
      - "8080:8080"
    depends_on:
      - "postgres"
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgresql://graph-node:let-me-in@postgres:5432/graph-node
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
  
  code-compiler:
    image: sprise/code-compiler:0.2
    ports:
      - "5000:5000"
    environment:
      # Pointing to our IPFS container
      IPFS_URL: /dns/ipfs/tcp/5001/http
      # Pointing to our Index Manager container
      INDEX_MANAGER_URL: http://indexer:3030

  substrate-node:
    image: sprise/substrate-node:0.1
    ports:
      - "9944:9944"
    restart: always
    command: bash -c "./target/release/node-template --dev --ws-external"

  chain-reader:
    image: sprise/chain-reader:0.4
    command: bash -c "sleep 5; ./target/release/chain-reader"
    ports:
      - "50051:50051"
    depends_on:
      - "substrate-node"
    restart: always
    environment:
      # Pointing to our substrate container
      NODE_SERVER: ws://substrate-node

  indexer:
    image: sprise/indexer:0.4
    ports:
      - "3030:3030"
    depends_on:
      - "chain-reader"
    restart: always
    environment:
      # Pointing to our chain-reader container
      CHAIN_READER_URL: http://chain-reader:50051
      # Pointing to our hasura container
      HASURA_URL: http://hasura:8080/v1/query
      # Pointing to our postgres container (the last param is the postgres container name)
      DATABASE_CONNECTION_STRING: postgres://graph-node:let-me-in@postgres
      # Pointing to our IPFS container
      IPFS_ADDRESS: ipfs:5001

  dashboard:
    image: sprise/dashboard:0.3
    ports:
      - "8088:8088"
    depends_on: # Dashboard App will call to indexer to get indexer detail & code-compiler to compile and deploy new index
      - "indexer"
      - "code-compiler"
