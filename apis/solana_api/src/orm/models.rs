// Generated by diesel_ext

#![allow(unused)]
#![allow(clippy::all)]
use super::schema::*;
use bigdecimal::BigDecimal;
use serde::{Deserialize, Serialize};

#[derive(Queryable, Debug, Identifiable)]
pub struct NetworkState {
    pub id: i64,
    pub chain: String,
    pub network: String,
    pub got_block: i64,
}

#[derive(Queryable, Debug, Identifiable)]
pub struct SolanaAccountTransaction {
    pub block_slot: Option<i64>,
    pub tx_index: Option<i16>,
    pub account: Option<String>,
    pub pre_balance: Option<i64>,
    pub post_balance: Option<i64>,
    pub id: i64,
}

#[derive(Queryable, Debug, Identifiable, Serialize)]
#[primary_key(block_hash)]
pub struct SolanaBlock {
    pub block_slot: Option<i64>,
    pub block_hash: String,
    pub previous_block_hash: Option<String>,
    pub parent_slot: Option<i64>,
    pub transaction_number: Option<i64>,
    pub timestamp: Option<i64>,
    pub leader: Option<String>,
    pub reward: Option<i64>,
}

#[derive(Queryable, Debug, Identifiable, Deserialize, Serialize)]
pub struct SolanaDailyStatBlock {
    pub id: i64,
    pub network: Option<String>,
    pub date: Option<i64>,
    pub min_block_slot: Option<i64>,
    pub max_block_slot: Option<i64>,
    pub block_counter: Option<i64>,
    pub total_tx: Option<i64>,
    pub success_tx: Option<i64>,
    pub total_reward: Option<i64>,
    pub total_fee: Option<i64>,
    pub average_block_time: Option<i64>,
    pub fist_block_time: Option<i64>,
    pub last_block_time: Option<i64>,
}

#[derive(Queryable, Debug, Identifiable)]
pub struct SolanaInnerInstruction {
    pub id: i64,
}

#[derive(Queryable, Debug, Identifiable)]
pub struct SolanaInstAdvanceNonce {
    pub id: i64,
    pub tx_hash: Option<String>,
    pub block_time: Option<i64>,
    pub inst_order: Option<i32>,
    pub nonce_account: Option<String>,
    pub recent_block_hashes_sysvar: Option<String>,
    pub nonce_authority: Option<String>,
}

#[derive(Queryable, Debug, Identifiable)]
pub struct SolanaInstAllocate {
    pub id: i64,
    pub tx_hash: Option<String>,
    pub block_time: Option<i64>,
    pub inst_order: Option<i32>,
    pub account: Option<String>,
    pub space: Option<i64>,
    pub base: Option<String>,
    pub seed: Option<String>,
    pub owner: Option<String>,
}

#[derive(Queryable, Debug, Identifiable)]
pub struct SolanaInstAssign {
    pub id: i64,
    pub tx_hash: Option<String>,
    pub block_time: Option<i64>,
    pub inst_order: Option<i32>,
    pub account: Option<String>,
    pub base: Option<String>,
    pub seed: Option<String>,
    pub owner: Option<String>,
}

#[derive(Queryable, Debug, Identifiable)]
pub struct SolanaInstAuthorizeNonce {
    pub id: i64,
    pub tx_hash: Option<String>,
    pub block_time: Option<i64>,
    pub inst_order: Option<i32>,
    pub nonce_account: Option<String>,
    pub nonce_authority: Option<String>,
    pub new_authorized: Option<String>,
}

#[derive(Queryable, Debug, Identifiable)]
pub struct SolanaInstCreateAccount {
    pub id: i64,
    pub tx_hash: Option<String>,
    pub block_time: Option<i64>,
    pub inst_order: Option<i32>,
    pub source: Option<String>,
    pub new_account: Option<String>,
    pub base: Option<String>,
    pub seed: Option<String>,
    pub lamports: Option<i64>,
    pub space: Option<i64>,
    pub owner: Option<String>,
}

#[derive(Queryable, Debug, Identifiable)]
pub struct SolanaInstInitializeNonce {
    pub id: i64,
    pub tx_hash: Option<String>,
    pub block_time: Option<i64>,
    pub inst_order: Option<i32>,
    pub nonce_account: Option<String>,
    pub recent_block_hashes_sysvar: Option<String>,
    pub rent_sysvar: Option<String>,
    pub nonce_authority: Option<String>,
}

#[derive(Queryable, Debug, Identifiable)]
pub struct SolanaInstTransfer {
    pub id: i64,
    pub tx_hash: Option<String>,
    pub block_time: Option<i64>,
    pub inst_order: Option<i32>,
    pub source: Option<String>,
    pub destination: Option<String>,
    pub lamports: Option<i64>,
    pub source_base: Option<String>,
    pub source_seed: Option<String>,
    pub source_owner: Option<String>,
}

#[derive(Queryable, Debug, Identifiable)]
pub struct SolanaInstWithdrawFromNonce {
    pub id: i64,
    pub tx_hash: Option<String>,
    pub block_time: Option<i64>,
    pub inst_order: Option<i32>,
    pub nonce_account: Option<String>,
    pub destination: Option<String>,
    pub recent_block_hashes_sysvar: Option<String>,
    pub rent_sysvar: Option<String>,
    pub nonce_authority: Option<String>,
    pub lamports: Option<i64>,
}

#[derive(Queryable, Debug, Identifiable)]
pub struct SolanaInstruction {
    pub id: i64,
    pub block_slot: Option<i64>,
    pub tx_index: Option<i16>,
    pub block_time: Option<i64>,
    pub inst_index: Option<i32>,
    pub program_name: Option<String>,
    pub accounts: Option<Vec<String>>,
    pub data: Option<Vec<u8>>,
}

#[derive(Queryable, Debug, Identifiable)]
#[primary_key(tx_hash)]
pub struct SolanaLog {
    pub tx_hash: String,
    pub log_messages: Option<Vec<String>>,
    pub block_time: Option<i64>,
}

#[derive(Queryable, Debug, Identifiable)]
pub struct SolanaTokenBalance {
    pub id: i64,
    pub block_slot: Option<i64>,
    pub tx_index: Option<i16>,
    pub account: Option<String>,
    pub token_address: Option<String>,
    pub decimals: Option<i16>,
    pub pre_amount: Option<i64>,
    pub post_amount: Option<i64>,
}

#[derive(Queryable, Debug, Identifiable, Serialize, Deserialize)]
#[primary_key(signatures)]
pub struct SolanaTransaction {
    pub block_slot: Option<i64>,
    pub tx_index: Option<i16>,
    pub signatures: String,
    pub signers: Option<String>,
    pub reward: Option<i64>,
    pub fee: Option<i64>,
    pub status: Option<String>,
    pub instructions: Option<Vec<String>>,
}
